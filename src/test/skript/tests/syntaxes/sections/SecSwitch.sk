using switch cases


test "sec switch (simple)":
	switch 10:
		this exists:
			add 1 to {_var}
		this is alive:
			assert true is false with "This is not alive"
		this is 5:
			assert true is false with "This is not 5"
		this is equal to 10:
			add 1 to {_var}
		10 is equal to 10:
			add 1 to {_var}
		this is 5:
			assert true is false with "This is not 5"
	assert {_var} is 3 with "At least one condition failed"


test "sec switch (simple + stack cases)":
	switch 10:
		this exists
		this is 10:
			add 1 to {_var}
		this exists
		this is alive:
			assert true is false with "This is not alive"
		this is alive
		this exists:
			assert true is false with "This is not alive (2)"
		this is 5
		this is 5
		this is 5:
			assert true is false with "This is not 5"
		this is equal to 10
		this is equal to 10:
			add 1 to {_var}
	assert {_var} is 2 with "At least one condition failed"


test "sec switch (simple + stack cases + multiple)":
	set {_test::this is 5} to 0
	set {_test::this is greater than 0} to 0
	set {_test::this is greater than 1} to 0
	switch 1, 3 and 5:
		this exists
		this is alive:
			assert true is false with "this is not alive"
		this is alive
		this exists:
			assert true is false with "this is not alive (2)"
		this exists
		this is 10:
			assert true is false with "this is not 10"
		this is 5
		this is 5
		this is 5:
			add 1 to {_test::this is 5}
		this is equal to 10
		this is equal to 10:
			assert true is false with "this is not 10"
		this is greater than 0:
			add 1 to {_test::this is greater than 0}
		this is greater than 1:
			add 1 to {_test::this is greater than 1}
	assert {_test::this is 5} is 1 with "one thing should be 5: %{_test::this is 5}%"
	assert {_test::this is greater than 0} is 3 with "three things should be > 0: %{_test::this is greater than 0}%"
	assert {_test::this is greater than 1} is 2 with "two things should be > 1: %{_test::this is greater than 1}%"


test "sec switch (strict)":
	@strict switch
	switch 10:
		this exists:
			add 1 to {_var}
		this is alive:
			assert true is false with "This is not alive"
		this is 5:
			assert true is false with "This is not 5"
		this is equal to 10:
			add 1 to {_var}
			assert true is false with "A second condition passed"
		10 is equal to 10:
			add 1 to {_var}
			assert true is false with "A third condition passed"
		this is 5:
			assert true is false with "This is not 5"
	assert {_var} is greater than 0 with "No conditions passed"
	assert {_var} is less than or equal to 3 with "Too many conditions passed: %{_var}%"
	assert {_var} is 1 with "More than one (strict) case passed: %{_var}%"


test "sec switch (strict + stack cases)":
	@strict switch
	switch 10:
		this exists
		this is 10:
			add 1 to {_var}
		this exists
		this is alive:
			assert true is false with "This is not alive"
		this is alive
		this exists:
			assert true is false with "This is not alive (2)"
		this is 5
		this is 5
		this is 5:
			assert true is false with "This is not 5"
		this is equal to 10
		this is equal to 10:
			add 1 to {_var}
			assert true is false with "A second condition passed"
	assert {_var} is greater than 0 with "No conditions passed"
	assert {_var} is less than or equal to 3 with "Too many conditions passed: %{_var}%"
	assert {_var} is 1 with "More than one (strict) case passed: %{_var}%"


test "sec switch (strict + stack cases + multiple)":
	set {_test::this is 5} to 0
	set {_test::this is greater than 0} to 0
	set {_test::this is greater than 1} to 0
	@strict switch
	switch 1, 3 and 5:
		this exists
		this is alive:
			assert true is false with "this is not alive"
		this is greater than 1:
			add 1 to {_test::this is greater than 1}
		this is greater than 0:
			add 1 to {_test::this is greater than 0}
		this is 5
		this is 5
		this is 5:
			add 1 to {_test::this is 5}
			assert true is false with "unreachable!"
		this is equal to 10
		this is equal to 10:
			assert true is false with "this is not 10"
	assert {_test::this is 5} is 0 with "nothing should be 5: %{_test::this is 5}%"
	assert {_test::this is greater than 0} is 1 with "one thing should be > 0: %{_test::this is greater than 0}%"
	assert {_test::this is greater than 1} is 2 with "two things should be > 1: %{_test::this is greater than 1}%"


test "sec switch (fall-through)":
	@fall-through switch
	switch 10:
		this is alive:
			assert true is false with "this is not alive"
		this exists:
			add 1 to {_var}
		this is alive:
			add 1 to {_var}
	assert {_var} is greater than 0 with "no cases passed"
	assert {_var} is greater than 1 with "cases didn't fall through correctly"
	assert {_var} is 2 with "somehow, palpatine returned"


test "sec switch (fall-through + stacked cases)":
	@fall-through switch
	switch 10:
		this exists
		this is alive:
			assert true is false with "this is not alive"
		this exists
		this is 10:
			add 1 to {_var}
		this exists:
			add 1 to {_var}
		this is greater than 50
		this is alive:
			add 1 to {_var}
	assert {_var} is greater than 0 with "no cases passed"
	assert {_var} is greater than 2 with "cases didn't fall through correctly: %{_var}%"
	assert {_var} is 3 with "somehow, more cases ran than were permitted"


test "sec switch (mixed)":
	switch 10, 2:
		this exists
		this is alive:
			assert true is false with "this is not alive"
		this exists
		@strict switch
		this is 10:
			add 1 to {_var1}
		@fall-through switch
		this exists:
			add 1 to {_var2}
		this is greater than 50
		this is alive:
			add 1 to {_var2}
	assert {_var1} is 1 with "10 should pass 1 case: %{_var1}%"
	assert {_var2} is 2 with "2 should pass 2 cases: %{_var2}%"
